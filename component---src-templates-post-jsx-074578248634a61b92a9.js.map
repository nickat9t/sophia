{"version":3,"sources":["webpack:///./src/components/UserInfo/UserInfo.jsx","webpack:///./src/components/Disqus/Disqus.jsx","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/SocialLinks/SocialLinks.jsx","webpack:///./src/templates/post.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/logo.jpg","webpack:///./src/components/MyNavbar.js","webpack:///./src/layout/index.jsx","webpack:///./src/components/SEO/SEO.jsx"],"names":["Component","PostTemplate","render","_this$props","this","props","data","slug","pageContext","postNode","markdownRemark","post","frontmatter","id","category_id","config","postDefaultCategoryID","react_default","a","createElement","layout","image","cover","Helmet_default","title","siteTitle","SEO","postPath","postSEO","titleJa","dangerouslySetInnerHTML","__html","html","React","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","userLinks","copyright","themeColor","backgroundColor","replace","substr","slice","module","exports","__webpack_require__","p","MyNavbar","Fragment","Navbar_default","bg","expand","fixed","Brand","onClick","navigate","Toggle","aria-controls","Collapse","Nav_default","className","NavDropdown_default","Item","Divider","Link","MainLayout","children","name","content","MyNavbar_MyNavbar","Image_default","src","Math","floor","random","Container_default","Jumbotron_default","fluid","Row_default","Col_default","defaultActiveKey","Date","getFullYear","description","postURL","postMeta","excerpt","urljoin","blogURL","schemaOrgJSONLD","@context","@type","url","alternateName","push","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","type","JSON","stringify","property"],"mappings":"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","file":"component---src-templates-post-jsx-074578248634a61b92a9.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Follow } from \"react-twitter-widgets\";\r\n\r\nclass UserInfo extends Component {\r\n  render() {\r\n    const { userTwitter } = this.props.config;\r\n    const { expanded } = this.props;\r\n    return (\r\n      <Follow\r\n        username={userTwitter}\r\n        options={{ count: expanded ? true : \"none\" }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserInfo;\r\n","import React, { Component } from \"react\";\r\nimport ReactDisqusComments from \"react-disqus-comments\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nclass Disqus extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toasts: []\r\n    };\r\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\r\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\r\n  }\r\n\r\n  onSnackbarDismiss() {\r\n    const [, ...toasts] = this.state.toasts;\r\n    this.setState({ toasts });\r\n  }\r\n  notifyAboutComment() {\r\n    const toasts = this.state.toasts.slice();\r\n    toasts.push({ text: \"New comment available!\" });\r\n    this.setState({ toasts });\r\n  }\r\n  render() {\r\n    const { postNode } = this.props;\r\n    if (!config.disqusShortname) {\r\n      return null;\r\n    }\r\n    const post = postNode.frontmatter;\r\n    const url = urljoin(\r\n      config.siteUrl,\r\n      config.pathPrefix,\r\n      postNode.fields.slug\r\n    );\r\n    return (\r\n      <ReactDisqusComments\r\n        shortname={config.disqusShortname}\r\n        identifier={post.title}\r\n        title={post.title}\r\n        url={url}\r\n        category_id={post.category_id}\r\n        onNewComment={this.notifyAboutComment}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Disqus;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"gatsby\";\r\n\r\nclass PostTags extends Component {\r\n  render() {\r\n    const { tags } = this.props;\r\n    return (\r\n      <div className=\"post-tag-container\">\r\n        {tags &&\r\n          tags.map(tag => (\r\n            <Link\r\n              key={tag}\r\n              style={{ textDecoration: \"none\" }}\r\n              to={`/tags/${_.kebabCase(tag)}`}\r\n            >\r\n              <button>{tag}</button>\r\n            </Link>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostTags;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  FacebookShareButton,\r\n  LinkedinShareButton,\r\n  TwitterShareButton,\r\n  TelegramShareButton,\r\n  RedditShareButton,\r\n  FacebookShareCount,\r\n  LinkedinShareCount,\r\n  RedditShareCount,\r\n  FacebookIcon,\r\n  TwitterIcon,\r\n  TelegramIcon,\r\n  LinkedinIcon,\r\n  RedditIcon\r\n} from \"react-share\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../../data/SiteConfig\";\r\nimport \"./SocialLinks.css\";\r\n\r\nclass SocialLinks extends Component {\r\n  render() {\r\n    const { postNode, postPath, mobile } = this.props;\r\n    const post = postNode.frontmatter;\r\n    const url = urljoin(config.siteUrl, config.pathPrefix, postPath);\r\n    const iconSize = mobile ? 36 : 48;\r\n    const filter = count => (count > 0 ? count : \"\");\r\n    const renderShareCount = count => (\r\n      <div className=\"share-count\">{filter(count)}</div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"social-links\">\r\n        <RedditShareButton url={url} title={post.title}>\r\n          <RedditIcon round size={iconSize} />\r\n          <RedditShareCount url={url}>\r\n            {count => renderShareCount(count)}\r\n          </RedditShareCount>\r\n        </RedditShareButton>\r\n        <TwitterShareButton url={url} title={post.title}>\r\n          <TwitterIcon round size={iconSize} />\r\n        </TwitterShareButton>\r\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\r\n          <FacebookIcon round size={iconSize} />\r\n          <FacebookShareCount url={url}>\r\n            {count => renderShareCount(count)}\r\n          </FacebookShareCount>\r\n        </FacebookShareButton>\r\n        <LinkedinShareButton\r\n          url={url}\r\n          title={post.title}\r\n          description={postNode.excerpt}\r\n        >\r\n          <LinkedinIcon round size={iconSize} />\r\n          <LinkedinShareCount url={url}>\r\n            {count => renderShareCount(count)}\r\n          </LinkedinShareCount>\r\n        </LinkedinShareButton>\r\n        <TelegramShareButton url={url}>\r\n          <TelegramIcon round size={iconSize} />\r\n        </TelegramShareButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SocialLinks;\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\nimport UserInfo from \"../components/UserInfo/UserInfo\";\r\nimport Disqus from \"../components/Disqus/Disqus\";\r\nimport PostTags from \"../components/PostTags/PostTags\";\r\nimport SocialLinks from \"../components/SocialLinks/SocialLinks\";\r\nimport SEO from \"../components/SEO/SEO\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport \"./b16-tomorrow-dark.css\";\r\nimport \"./post.css\";\r\n\r\nexport default class PostTemplate extends React.Component {\r\n  render() {\r\n    const { data, pageContext } = this.props;\r\n    const { slug } = pageContext;\r\n    const postNode = data.markdownRemark;\r\n    const post = postNode.frontmatter;\r\n    if (!post.id) {\r\n      post.id = slug;\r\n    }\r\n    if (!post.category_id) {\r\n      post.category_id = config.postDefaultCategoryID;\r\n    }\r\n    return (\r\n      <Layout image={post.cover}>\r\n        <div>\r\n          <Helmet>\r\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\r\n          </Helmet>\r\n          <SEO postPath={slug} postNode={postNode} postSEO />\r\n          <div>\r\n            <h1>{post.titleJa}<br/>{post.title}</h1>\r\n            <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      timeToRead\r\n      excerpt\r\n      frontmatter {\r\n        title\r\n        titleJa\r\n        cover\r\n        date\r\n        category\r\n        tags\r\n      }\r\n      fields {\r\n        slug\r\n        date\r\n      }\r\n    }\r\n  }\r\n`;\r\n","const config = {\r\n  siteTitle: \"Sophia School\", // Site title.\r\n  siteTitleShort: \"Sophia School\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\r\n  siteTitleAlt: \"Sophia School\", // Alternative site title for SEO.\r\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\r\n  siteUrl: \"https://temptemp3.github.io\", // Domain of your website without pathPrefix.\r\n  pathPrefix: \"/sophia\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\r\n  siteDescription: \"Let me tell you about our Japanese courses. The English Language school operated by Sophia is where you can master &#39;genuine English.&#39; The website of Sophia Language School.\", // Website description used for RSS feeds/meta description tag.\r\n  siteRss: \"/rss.xml\", // Path to the RSS file.\r\n  siteFBAppID: \"\", // FB Application ID for using app insights\r\n  googleAnalyticsID: \"\", // GA tracking ID.\r\n  disqusShortname: \"\", // Disqus shortname.\r\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\r\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\r\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\r\n  userName: \"Sophia School\", // Username to display in the author segment.\r\n  userEmail: \"enquiry@sophia-school.com\", // Email used for RSS feed's author segment\r\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\r\n  userLocation: \"\", // User location to display in the author segment.\r\n  userAvatar: \"\", // User avatar to display in the author segment.\r\n  userDescription:\r\n    \"\", // User description to display in the author segment.\r\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\r\n  userLinks: [],\r\n  copyright: \"Copyright © 2019. Sophia School\", // Copyright string for the footer of the website and RSS feed.\r\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\r\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\r\n};\r\n\r\n// Validate\r\n\r\n// Make sure pathPrefix is empty if not needed\r\nif (config.pathPrefix === \"/\") {\r\n  config.pathPrefix = \"\";\r\n} else {\r\n  // Make sure pathPrefix only contains the first forward slash\r\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\r\n}\r\n\r\n// Make sure siteUrl doesn't have an ending forward slash\r\nif (config.siteUrl.substr(-1) === \"/\")\r\n  config.siteUrl = config.siteUrl.slice(0, -1);\r\n\r\n// Make sure siteRss has a starting forward slash\r\nif (config.siteRss && config.siteRss[0] !== \"/\")\r\n  config.siteRss = `/${config.siteRss}`;\r\n\r\nmodule.exports = config;\r\n","module.exports = __webpack_public_path__ + \"static/logo-3d7e338aeba850c6b19c5706b2403cc0.jpg\";","import React, { Component } from \"react\"\r\nimport { Link, navigate } from \"gatsby\"\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Form from 'react-bootstrap/Form'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\nimport config from \"../../data/SiteConfig\";\r\nimport logo from \"./logo.jpg\"\r\n\r\nexport default class MyNavbar extends Component {\r\n  render() {\r\n    return <>\r\n<Navbar bg=\"light\" expand=\"lg\" fixed={this.props.fixed}>\r\n  <Navbar.Brand onClick={()=>{navigate(\"/\")}}>\r\n  {config.siteTitle}\r\n  </Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      <NavDropdown title=\"Lessons\" id=\"basic-nav-dropdown\">\r\n        <NavDropdown.Item onClick={()=>{navigate(\"private-lessons\")}}>Private Lessons</NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item onClick={()=>{navigate(\"group-lessons\")}}>Group Lessons</NavDropdown.Item>\r\n      </NavDropdown>\r\n      <Nav.Link onClick={()=>{navigate(\"corporate-classes\")}}>Corporate Classes</Nav.Link>\r\n      <NavDropdown title=\"Courses\" id=\"basic-nav-dropdown\">\r\n        <NavDropdown.Item onClick={()=>{navigate(\"/special-course-test-prep#ielts対策コース\")}}>IELTS Test Prep</NavDropdown.Item>\r\n        <NavDropdown.Item onClick={()=>{navigate(\"/special-course-test-prep#toeic-and-toefl-コース\")}}>TOEIC, TOEFL Test Prep</NavDropdown.Item>\r\n        <NavDropdown.Item onClick={()=>{navigate(\"/special-course-test-prep#90-days-special-courses\")}}>Special Courses</NavDropdown.Item>\r\n      </NavDropdown>\r\n    </Nav>\r\n    <Nav>\r\n    <Nav.Link onClick={()=>{navigate(\"/contact-us\")}}>Contact Us</Nav.Link>\r\n    </Nav>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n    </>\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport \"./index.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport MyNavbar from \"../components/MyNavbar\"\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport Nav from \"react-bootstrap/Nav\"\r\nimport Image from 'react-bootstrap/Image'\r\nimport { navigate } from 'gatsby'\r\n\r\nexport default class MainLayout extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return <>\r\n      <Helmet>\r\n          <meta name=\"description\" content={config.siteDescription} />\r\n      </Helmet>\r\n      <MyNavbar fixed=\"top\"/>\r\n　　　<Image src={this.props.image?\r\n\tthis.props.image:\r\n\t[\"images/shield-1519642_1920.jpg\"][Math.floor((Math.random() * 1))]} className=\"img-fluid w-100\"/>\r\n      <Container className=\"pt-5\">\r\n        {children}\r\n      </Container>\r\n<Jumbotron className=\"mb-0\" fluid>\r\n<Container>\r\n<h2>{config.siteTitle}</h2>\r\n<Row className=\"text-left\">\r\n<Col>\r\n<Nav defaultActiveKey=\"#\" className=\"flex-column\">\r\n  <Nav.Link onClick={()=>{navigate(\"private-lessons\")}}>Private Lessons</Nav.Link>\r\n  <Nav.Link onClick={()=>{navigate(\"group-lessons\")}}>Group Lessons</Nav.Link>\r\n  <Nav.Link onClick={()=>{navigate(\"corporate-classes\")}}>Corporate Classes</Nav.Link>\r\n</Nav>\r\n</Col>\r\n<Col>\r\n<Nav defaultActiveKey=\"#\" className=\"flex-column\">\r\n  <Nav.Link onClick={()=>{navigate(\"special-course-test-prep/#ielts対策コース\")}}>Test Prep</Nav.Link>\r\n  <Nav.Link onClick={()=>{navigate(\"special-course-test-prep/#90-days-special-courses\")}}>Special Courses</Nav.Link>\r\n</Nav>\r\n</Col>\r\n<Col>\r\n<Nav defaultActiveKey=\"#\" className=\"flex-column\">\r\n  <Nav.Link onClick={()=>{navigate(\"contact-us\")}}>Contact Us</Nav.Link>\r\n</Nav>\r\n</Col>\r\n\r\n</Row>\r\n  </Container>\r\n</Jumbotron>\r\n<Row className=\"p-3\">\r\n<Col>\r\nCopyright &copy; {(new Date()).getFullYear()} {config.siteTitle}\r\n</Col>\r\n</Row>\r\n\r\n    </>\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nclass SEO extends Component {\r\n  render() {\r\n    const { postNode, postPath, postSEO } = this.props;\r\n    let title;\r\n    let description;\r\n    let image;\r\n    let postURL;\r\n    if (postSEO) {\r\n      const postMeta = postNode.frontmatter;\r\n      ({ title } = postMeta);\r\n      description = postMeta.description\r\n        ? postMeta.description\r\n        : postNode.excerpt;\r\n      image = postMeta.cover;\r\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\r\n    } else {\r\n      title = config.siteTitle;\r\n      description = config.siteDescription;\r\n      image = config.siteLogo;\r\n    }\r\n\r\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\r\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\r\n    const schemaOrgJSONLD = [\r\n      {\r\n        \"@context\": \"http://schema.org\",\r\n        \"@type\": \"WebSite\",\r\n        url: blogURL,\r\n        name: title,\r\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\r\n      }\r\n    ];\r\n    if (postSEO) {\r\n      schemaOrgJSONLD.push(\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BreadcrumbList\",\r\n          itemListElement: [\r\n            {\r\n              \"@type\": \"ListItem\",\r\n              position: 1,\r\n              item: {\r\n                \"@id\": postURL,\r\n                name: title,\r\n                image\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BlogPosting\",\r\n          url: blogURL,\r\n          name: title,\r\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\r\n          headline: title,\r\n          image: {\r\n            \"@type\": \"ImageObject\",\r\n            url: image\r\n          },\r\n          description\r\n        }\r\n      );\r\n    }\r\n    return (\r\n      <Helmet>\r\n        {/* General tags */}\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"image\" content={image} />\r\n\r\n        {/* Schema.org tags */}\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(schemaOrgJSONLD)}\r\n        </script>\r\n\r\n        {/* OpenGraph tags */}\r\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\r\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\r\n        <meta property=\"og:title\" content={title} />\r\n        <meta property=\"og:description\" content={description} />\r\n        <meta property=\"og:image\" content={image} />\r\n        <meta\r\n          property=\"fb:app_id\"\r\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\r\n        />\r\n\r\n        {/* Twitter Card tags */}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta\r\n          name=\"twitter:creator\"\r\n          content={config.userTwitter ? config.userTwitter : \"\"}\r\n        />\r\n        <meta name=\"twitter:title\" content={title} />\r\n        <meta name=\"twitter:description\" content={description} />\r\n        <meta name=\"twitter:image\" content={image} />\r\n      </Helmet>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SEO;\r\n"],"sourceRoot":""}